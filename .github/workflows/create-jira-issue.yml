name: Create Jira issue

on:
  issues:
    types: [opened]

jobs:
  create-issue:
    name: Create Jira issue
    runs-on: ubuntu-latest

    steps:
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Checkout dev branch (if needed)
        uses: actions/checkout@v4
        with:
          ref: dev

      # GitHub Issue Form 파싱 (있으면 사용 / 없으면 넘어감)
      - name: Issue Parser
        id: issue-parser
        uses: stefanbuck/github-issue-parser@v3
        with:
          template-path: .github/ISSUE_TEMPLATE/issue_form.yml

      - name: Log Issue Parser
        run: echo '${{ steps.issue-parser.outputs.jsonString }}'

      # ─────────────────────────────────────────────────────────
      # 여기가 "내 템플릿"을 구성하는 곳입니다 (Markdown → Jira위키 변환)
      # ─────────────────────────────────────────────────────────
      - name: Convert Markdown template to Jira Syntax
        id: md2jira
        uses: peter-evans/jira2md@v1
        with:
          mode: md2jira
          input-text: |
            ### Github Issue Link
            - ${{ github.event.issue.html_url }}

            ## 📖 전체 설명
            > 사용자의 관점에서 어떤 흐름을 만들고 싶은지, 그리고 수행해야 할 작업 내용을 간략하게 설명해주세요.  
            > 예) 사용자는 Navbar를 통해 내 정보/로그아웃/대시보드 메뉴에 접근할 수 있다.
            - 항목
            - 항목
            - 항목

            ---

            ## 📑 세부 계획 (Checklist)
            - [ ] 항목
            - [ ] 항목
            - [ ] 항목

            ---

            ## ✅ 완료 조건 (Acceptance Criteria)
            > 구현 후 반드시 확인해야 하는 동작/조건을 작성해주세요.  
            > 예) 드롭다운 메뉴 클릭 시 페이지가 정상적으로 이동한다.
            - [ ] 항목
            - [ ] 항목
            - [ ] 항목

            ---

            ## 📚 참고 자료
            - 항목
            - 항목
            - 항목

            ---

            ### 원문(GitHub Issue Body)
            ${{ github.event.issue.body }}

      # Jira 이슈 생성
      - name: Create Issue
        id: create
        uses: atlassian/gajira-create@v3
        with:
          # ← 프로젝트 키(예: TS 로 바꾸세요)
          project: TS
          # 이슈 타입 (원래 Sub-task를 사용하셨기에 유지)
          issuetype: Sub-task
          summary: "${{ github.event.issue.title }}"
          description: "${{ steps.md2jira.outputs['output-text'] }}"
          fields: |
            {
              "parent": {
                "key": "${{ steps.issue-parser.outputs.issueparser_parentKey }}"
              }
            }

      - name: Log created issue
        run: echo "Jira Issue ${{ steps.issue-parser.outputs.issueparser_parentKey }}/${{ steps.create.outputs.issue }} was created"

      # 브랜치 생성(원하실 경우 유지)
      - name: Checkout dev again
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Create branch with Ticket number
        run: |
          BRANCH_NAME="${{ steps.issue-parser.outputs.issueparser_branchPrefix }}/#${{ steps.issue-parser.outputs.issueparser_parentKey }}-${{ steps.issue-parser.outputs.issueparser_branchName }}"
          git checkout -b "$BRANCH_NAME"
          git push origin "$BRANCH_NAME"

      - name: Update issue title on GitHub
        uses: actions-cool/issues-helper@v3
        with:
          actions: update-issue
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "${{ steps.create.outputs.issue }} ${{ github.event.issue.title }}"
