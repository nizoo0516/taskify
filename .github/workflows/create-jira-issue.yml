name: Create Jira issue

on:
  workflow_dispatch:
  issues:
    types: [opened]

jobs:
  create-issue:
    name: Create Jira issue
    runs-on: ubuntu-latest

    steps:
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Checkout dev branch (if needed)
        uses: actions/checkout@v4
        with:
          ref: dev

      # GitHub Issue Form 파싱
      - name: Issue Parser
        id: issue-parser
        uses: stefanbuck/github-issue-parser@v3
        with:
          template-path: .github/ISSUE_TEMPLATE/issue_form.yml

      - name: Log Issue Parser JSON
        run: echo '${{ steps.issue-parser.outputs.jsonString }}'

      # Markdown → Jira 변환
      - name: Convert Markdown template to Jira Syntax
        id: md2jira
        uses: peter-evans/jira2md@v1
        with:
          mode: md2jira
          input-text: |
            ### Github Issue [TS-24] Link
            - ${{ github.event.issue.html_url }}

            ## 📖 전체 설명
            ${{ steps.issue-parser.outputs.details_md }}

            ---

            ## 📑 세부 계획 (Checklist)
            ${{ steps.issue-parser.outputs.tasks_md }}

            ---

            ## ✅ 완료 조건 (Acceptance Criteria)
            > 구현 후 반드시 확인해야 하는 동작/조건을 작성해주세요.  
            > 예) 드롭다운 메뉴 클릭 시 페이지가 정상적으로 이동한다.

            ---

            ## 📚 참고 자료
            - (필요시 추가)

            ---

            ### 원문(GitHub Issue Body)
            ${{ github.event.issue.body }}

      # Debug step
      - name: Debug md2jira output
        run: echo "OUTPUT = >>>${{ steps.md2jira.outputs.output-text }}<<<"

      - name: Debug details
        run: echo "DETAILS = >>>${{ steps.issue-parser.outputs.details_md }}<<<"

      - name: Debug tasks
        run: echo "TASKS = >>>${{ steps.issue-parser.outputs.tasks_md }}<<<"

      # Jira 이슈 생성
      - name: Create Issue
        id: create
        uses: atlassian/gajira-create@v3
        with:
          project: TS # ← 실제 Jira 프로젝트 키
          issuetype: Story # ← Jira에서 사용할 이슈 타입
          summary: "${{ github.event.issue.title }}"
          description: "${{ steps.md2jira.outputs.output_text }}"
          fields: |
            {
              "parent": {
                "key": "${{ steps.issue-parser.outputs.parent_key }}"
              }
            }

      - name: Log created issue
        run: echo "Jira Issue ${{ steps.issue-parser.outputs.parent_key }}/${{ steps.create.outputs.issue }} was created"

      # (선택) 브랜치 생성
      - name: Checkout main again
        uses: actions/checkout@v4

      - name: Create branch with Ticket number
        run: |
          BRANCH_NAME="${{ steps.issue-parser.outputs.branch_prefix }}/#${{ steps.issue-parser.outputs.parent_key }}-${{ steps.issue-parser.outputs.branch_name }}"
          git checkout -b "$BRANCH_NAME"
          git push origin "$BRANCH_NAME"

      # (선택) GitHub 이슈 제목 업데이트
      - name: Update issue title on GitHub
        uses: actions-cool/issues-helper@v3
        with:
          actions: update-issue
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "${{ steps.create.outputs.issue }} ${{ github.event.issue.title }}"
